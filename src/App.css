/* Reset + Base */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
}

body {
  background: rgb(3, 0, 31);
  color: white;
  font-family: "Poppins", "sans-serif";
  overflow-x: hidden;
}

/* App Container: a flex row */
.App {
  display: flex;
  min-height: 100vh;
}

/* --------------------------- Hamburger Button --------------------------- */
.hamburger {
  position: fixed;
  top: 1rem;
  left: 0.5rem;
  z-index: 2000;
  background: rgba(58, 28, 30, 0.9);
  border: none;
  color: white;
  font-size: 2.5rem;
  padding: 0.5rem;
  border-radius: 0.3rem;
  display: none; /* hidden by default */
  align-self: auto;
}

/* Show hamburger only on screens ≤ 800px */
@media (max-width: 800px) {
  .hamburger {
    display: block;
  }
}

/* --------------------------- Overlay (mobile) --------------------------- */
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1000;
}

/* --------------------------- Sidebar (always) --------------------------- */
.sideBar {
  display: flex;
  flex-direction: column;
  height: 100vh; /* fill full viewport height */
  width: 300px; /* fixed desktop width */
  background: #0d1d33;
  border-right: 1px solid #646464;
  transition: transform 0.3s ease;
  z-index: 1500;
  flex-shrink: 0;
}

/* When “closed” is applied, slide the sidebar off-screen */
.sideBar.closed {
  transform: translateX(-100%);
}

/* When “open” is applied (mobile), slide it into view */
.sideBar.open {
  transform: translateX(0);
}

/* --------------------------- Mobile Overrides (≤ 800px) --------------------------- */
@media (max-width: 800px) {
  .sideBar {
    width: 260px;
    height: 100%;
  }
}

/* --------------------------- Sidebar Contents --------------------------- */
.logo {
  margin-right: 0.5rem;
}

.upperSide {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  padding: 2.5rem;
  border-bottom: 2px solid rgb(100, 100, 100);
  min-height: 0;
}

.upperSideTop {
  flex: 0 0 auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin: 1rem 0;
  padding: 0 2.5rem;
}

.upperSideBottom {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: stretch;
  overflow-y: auto;
  padding: 0 0.5rem;
  min-height: 0;
}

/* Custom scrollbar styling */
.upperSideBottom::-webkit-scrollbar {
  width: 8px;
}
.upperSideBottom::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
}
.upperSideBottom::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.6);
  border-radius: 4px;
}
.upperSideBottom::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.8);
}
.upperSideBottom {
  scrollbar-width: thin;
  scrollbar-color: rgba(255, 255, 255, 0.6) rgba(255, 255, 255, 0.1);
}

.lowerSide {
  flex: 0 0 auto;
  padding: 2rem;
  border-top: 2px solid rgb(100, 100, 100);
}

.addBtn {
  height: 2rem;
  padding-right: 1rem;
}

.midBtn {
  background: #5a4bff;
  border: none;
  color: white;
  padding: 1.5rem;
  font-size: 1.5rem;
  width: 100%;
  max-width: 35rem;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 2rem auto;
  border-radius: 0.5rem;
}

/* ——— updated query styling ——— */
.query {
  display: flex;
  align-items: center;
  background: transparent;
  background: rgba(255, 255, 255, 0.05);
  padding: 1rem 1.5rem;
  width: 100%;
  max-width: 35rem;
  margin: 0.5rem auto;
  border-radius: 0.5rem;
  color: rgb(222, 222, 222, 1);
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
.query:hover {
  background: rgba(255, 255, 255, 0.1);
}

/* group icon + text */
.queryContent {
  display: flex;
  align-items: center;
  gap: 1rem;
  overflow: hidden;
}
.queryContent img {
  height: 1.75rem;
  object-fit: cover;
  flex-shrink: 0;
}

/* date stamp */
.queryDate {
  font-size: 1.2rem;
  color: rgba(200, 200, 200, 0.8);
  white-space: nowrap;
  flex-shrink: 0;
  margin-left: 1.5rem;
}

/* Old listItems/nav styles unchanged */
.listItems {
  margin: 0.7rem 0;
  display: flex;
  align-items: center;
  font-size: 1.5rem;
}
.listitemImg {
  margin-right: 1rem;
  height: 1.5rem;
  object-fit: cover;
}

/* --------------------------- Main Chat Area --------------------------- */
.main {
  display: flex;
  flex-direction: column;
  flex: 1 1 0; /* grow to fill leftover space, shrink as needed */
  min-height: 100vh;
  padding: 5rem 2rem;
  max-width: 920px;
  margin: 0 auto;
}

.chats {
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.chat {
  display: flex;
  align-items: flex-start;
  margin: 1rem 0;
  padding: 1.5rem 2rem;
  font-size: 1.5rem;
  max-width: 100%;
  word-break: break-word;
  background: rgba(28, 30, 58, 1);
  border-radius: 3.5rem;
}

.chat.bot {
  flex-direction: column; /* stack image above text */
  align-items: center; /* center contents */
  align-self: center;
  background: transparent;
}

.chat.user {
  align-self: flex-end;
  background: rgba(28, 30, 58, 0.9);
}

.chatImg {
  width: 4rem;
  height: 4rem;
  border-radius: 6.5rem;
  object-fit: cover;
  flex-shrink: 0;
}

/* 1. First bot message stays centered & stacked */
.chats .chat.bot:first-child {
  display: flex;
  flex-direction: column;
  align-items: center;
  align-self: center;
  max-width: 70%;
  background-color: transparent;
}
.chats .chat.bot:first-child .chatImg {
  margin: 0 0 1rem;
}
.chats .chat.bot:first-child .txt {
  text-align: center;
  flex: none;
}
.chats .chat.bot:first-child .chatImg {
  width: 8rem;
  height: 8rem;
}
/* 2. All subsequent bot messages behave like user chats */
.chats .chat.bot:not(:first-child) {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  align-self: flex-start;
  max-width: 60%;
}
.chats .chat.bot:not(:first-child) .chatImg {
  margin: 0 2.5rem 0 0;
}
.chats .chat.bot:not(:first-child) .txt {
  text-align: left;
  flex: 1;
}
.chats .chat.user .chatImg {
  /* match the bot spacing, or tweak to taste */
  margin: 0 2.5rem 0 0;
}
.message-content {
  display: flex;
  flex-direction: column;
  align-items: center; /* horizontally center child elements */
  text-align: center;
}
.bot-heading {
  font-size: 1.8rem;
  font-weight: 600;
  margin: 0 0 0.25rem; /* space between heading & body */
  color: var(--accent2); /* or whatever your theme uses */
}
.txt {
  line-height: 1.5;
}

.chatFooter {
  margin-top: auto;
  width: 100%;
  display: flex;
  justify-content: center;
  padding: 1rem 0;
}

.inp {
  display: flex;
  align-items: center;
  width: 100%;
  max-width: 600px;
  background: rgba(28, 30, 58, 1);
  border-radius: 1.5rem;
  padding: 1.5rem;
}

.inp > input {
  flex: 1;
  border: none;
  background: transparent;
  padding: 1rem;
  padding-right: 0.5rem;
  color: white;
  font-size: 1.8rem;
  min-width: 0;
}

.send {
  background: transparent;
  border: none;
  cursor: pointer;
  flex-shrink: 0;
}
/* 1) Make your bot bubbles use a mono font and hide overflow */
.bubble.bot {
  font-family: "Courier New", Courier, monospace;
  white-space: nowrap;
  overflow: hidden;
  display: inline-block; /* shrink‐to‐fit the changing width */
  vertical-align: bottom; /* keeps it aligned with other bubbles/buttons */
}

/* 2) Add a blinking caret with CSS keyframes */
.bubble.bot.caret::after {
  content: "";
  display: inline-block;
  width: 1px;
  height: 1em;
  margin-left: 2px;
  background-color: currentColor;
  animation: blink-caret 0.75s step-end infinite;
}

/* 3) Define the blinking animation */
@keyframes blink-caret {
  from,
  to {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
}

.send img {
  width: 1.8rem;
  height: 1.8rem;
}

.main > p {
  text-align: center;
  margin-top: 2rem;
  font-size: 1.2rem;
}

@media (max-width: 800px) {
  .chat {
    padding: 1rem;
    font-size: 1.3rem;
    max-width: 90%;
  }

  .chatImg {
    width: 2.5rem;
    height: 2.5rem;
  }

  .inp > input {
    padding: 0.75rem;
    font-size: 1.2rem;
  }

  .send img {
    width: 1.2rem;
    height: 1.2rem;
  }

  .query > img {
    display: none;
  }
  .sideBar.closed {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
  }
  .sideBar.open {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
  }
}
